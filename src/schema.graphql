#import Movie, MovieInput, MovieUpdateInput from './graphql/movies.graphql'
type Query {
    prueba:String!,
    movies: [Movie!]!,
    movie( id: ID ): Movie,
    me: User,
    findPostByUserId(user_id:String!): [PostInput!]!
}

type Mutation {
    signup(data: UserInput! ): AuthToken,
    login( email: String!, password: String! ): AuthToken,
    createMovie( data: MovieInput! ): Movie,
    updateMovie( id: String!, data: MovieUpdateInput! ): Movie,
    deleteMovie( id: String ): String,
    upgradeSubscriptions(type: Subscriptions!): String,
    addSource( source: String! ): String,
    createInstagramPost(data: PostInput!): String
}

input PostInput {
    user_id: String!,
    photo: String!,
    likes: [LikeInput],
    comments: [CommentInput]
}



input LikeInput {
    user_id: String,
    user_name: String
}

input CommentInput {
    user_id:String!,
    user_comment:String!
}

input UserInput {
    first_name: String!,
    last_name: String!,
    email: String!,
    password: String!,
    birth_date: String,
    gender: Gender,
    nationality: String
}

enum Gender {
    Male,
    Female
}

type AuthToken {
    token: String!,
    id: String!
}


type User {
    first_name: String!,
    last_name: String!,
    email: String!,
    birth_date: String!,
    gender: Gender,
    nationality: String,
    history: [Movie],
    favorites: [Movie],
    subscription_id: Subscription,
    is_active: Boolean,
    user_payment: String
}

type Subscription {
    type_subscription: Subscriptions,
    start_date: String,
    end_date: String,
    is_active: Boolean,
    price: String,
    stripe_id: String
}

enum Subscriptions {
    BASIC,
    GOLD,
    PREMIUM
}
